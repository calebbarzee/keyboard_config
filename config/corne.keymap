/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        esc_alt: tap_dance_esc_alt {
            compatible = "zmk,behavior-hold-tap";
            label = "ESC_ALT";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // -----------------------------------------------------------------------------------------
        // DEFAULT
        // ----------------------------------------------------------------------------------------
        // | TAB  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
        // |ESC/ALT| A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
        // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
        //                    |CTRL | HYP | SPC |   | ENT | LWR  | RSE |
        // -----------------------------------------------------------------------------------------
        default_layer {
            bindings = <
                 &kp TAB           &kp Q      &kp W      &kp E      &kp R      &kp T        &kp Y      &kp U      &kp I      &kp O      &kp P      &kp BSPC
                 &esc_alt LALT ESC &kp A      &kp S      &kp D      &kp F      &kp G        &kp H      &kp J      &kp K      &kp L      &kp SEMI   &kp SQT
                 &kp LSHFT         &kp Z      &kp X      &kp C      &kp V      &kp B        &kp N      &kp M      &kp COMMA  &kp DOT    &kp FSLH   &kp RSHFT
                                     &kp LCTRL      &kp LGUI      &kp SPACE        &kp RET      &mo 1      &mo 2
            >;
        };

        // -----------------------------------------------------------------------------------------
        // MOD 1 : LOWER
        // -----------------------------------------------------------------------------------------
        // |      |     |     |  ~  |  _  |  `  |   |  <  |  >  |  +  |  -  |  =  |      |
        // |      |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | '|'  |
        // |      |     |     |  [  |  (  |  {  |   |  }  |  )  |  ]  |     |  \  |      |
        //                    |     |     |     |   |     |     |     |
        // -----------------------------------------------------------------------------------------
        lower_layer {
            bindings = <
                 &trans       &trans      &trans      &kp TILDE   &kp UNDER  &kp GRAVE      &kp LT        &kp GT      &kp PLUS    &kp MINUS   &kp EQUAL    &trans
                 &trans       &kp N1      &kp N2      &kp N3      &kp N4     &kp N5         &kp N6        &kp N7      &kp N8      &kp N9      &kp N0       &kp PIPE
                 &trans       &trans      &trans      &kp LBKT    &kp LPAR   &kp LBRC       &kp RBRC      &kp RPAR    &kp RBKT    &trans      &kp BSLH     &trans
                                &trans      &trans      &trans        &trans       &trans        &trans
            >;
        };

        // -----------------------------------------------------------------------------------------
        // MOD 2 : RAISE 
        // -----------------------------------------------------------------------------------------
        // |      | F1  |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 |      |
        // |      |VOL- |VOL+ |PREV |PLAY |NEXT |   | LFT | DWN |  UP | RGT |     |      |
        // | EXT_PWR | OUT_USB | OUT_BT | BT0 | BT1 | BT2 | RGB_TOG | RGB_EFF | RGB_BRD | RGB_BRI |     | BTCLR|
        //                    |     |     |     |   |     |     |     |
        // -----------------------------------------------------------------------------------------
        raise_layer {
            bindings = <
                 &trans                  &kp F1          &kp F2          &kp F3          &kp F4          &kp F5             &kp F6              &kp F7          &kp F8          &kp F9          &kp F10         &trans
                 &trans                  &kp C_VOL_DN    &kp C_VOL_UP    &kp C_PREV      &kp C_PP        &kp C_NEXT         &kp LEFT            &kp DOWN        &kp UP          &kp RIGHT       &trans          &trans
                 &ext_power EP_TOG       &out OUT_USB    &out OUT_BLE    &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2       &rgb_ug RGB_TOG     &rgb_ug RGB_EFF &rgb_ug RGB_BRD &rgb_ug RGB_BRI &trans          &bt BT_CLR
                                           &trans            &trans          &trans             &trans              &trans          &trans
                >;
            };
        };
    };
};
